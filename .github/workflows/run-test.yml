# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#  build:
#    name: Lint
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-node@v2
#        with:
#          node-version: '14'
#      - run: yarn global add node-gyp-cache
#      - run: yarn config set node_gyp node-gyp-cache
#      - run: yarn install --frozen-lockfile
#      - run: yarn lint
  testcoverage:
    name: Test and coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: yarn global add node-gyp-cache
      - run: yarn config set node_gyp node-gyp-cache
      - run: yarn install --frozen-lockfile
      - run: yarn compile
      - run: yarn run hardhat size-contracts
      - run: yarn coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: 177c7477-b961-48a3-811f-49494a3d5a41
          directory: ./coverage/
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: true
  # deploytest:
  #   name: Build & deploy to local optimism
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '14'
  #     - run: yarn global add node-gyp-cache hardhat
  #     - run: yarn config set node_gyp node-gyp-cache
  #     - run: yarn install --frozen-lockfile
  #     - run: yarn hardhat:node &
  #     # Build and deploy contracts to local chain
  #     - run: yarn compile
  #     - run: yarn deploy:wait